{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\"; // createSlice is an alternative and powerful way to write reducers and return states\n\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increament(state) {\n      state.counter++;\n    },\n\n    decreament(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nexport default counterSlice;","map":{"version":3,"sources":["/Users/pateh1/Desktop/ReactApps/react-redux-counter/src/store/counter.js"],"names":["createSlice","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increament","state","decreament","increase","action","payload","toggleCounter"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B,C,CAEA;;AACA,MAAMC,mBAAmB,GAAG;AAACC,EAAAA,OAAO,EAAE,CAAV;AAAaC,EAAAA,WAAW,EAAE;AAA1B,CAA5B;AACA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAC7BK,EAAAA,IAAI,EAAE,SADuB;AAE7BC,EAAAA,YAAY,EAAEL,mBAFe;AAG7BM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,CAACC,KAAD,EAAQ;AACdA,MAAAA,KAAK,CAACP,OAAN;AACH,KAHK;;AAINQ,IAAAA,UAAU,CAACD,KAAD,EAAQ;AACdA,MAAAA,KAAK,CAACP,OAAN;AACH,KANK;;AAONS,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACpBH,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBU,MAAM,CAACC,OAAvC;AACH,KATK;;AAUNC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACjBA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACH;;AAZK;AAHmB,CAAD,CAAhC;AAmBA,eAAeC,YAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n// createSlice is an alternative and powerful way to write reducers and return states\nconst initialCounterState = {counter: 0, showCounter: true};\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState: initialCounterState,\n    reducers: {\n        increament(state) {\n            state.counter++;\n        },\n        decreament(state) {\n            state.counter--;\n        },\n        increase(state, action) {\n            state.counter = state.counter + action.payload;\n        },\n        toggleCounter(state) {\n            state.showCounter = !state.showCounter;\n        }\n    }\n});\n\nexport default counterSlice;"]},"metadata":{},"sourceType":"module"}