{"ast":null,"code":"import { cartActions } from \"./cart-slice\";\nimport { uiActions } from \"./ui-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://react-http-demo-43d6f-default-rtdb.firebaseio.com/cart.json');\n\n      if (!response.ok) {\n        throw new Error(\"Could not fetch cart data\");\n      }\n\n      const data = response.json();\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n        ite\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Fetching Cart Data Failed!\"\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending Cart Data!\"\n    }));\n\n    const sendRequest = async () => {\n      const response = await fetch(\"https://react-http-demo-43d6f-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Sending Cart Data Failed.\");\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success\",\n        message: \"Sent Cart Data Successfully!\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Sending Cart Data Failed!\"\n      }));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/pateh1/Desktop/ReactApps/redux-async-side-effects/src/store/cart-actions.js"],"names":["cartActions","uiActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","ite","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"mappings":"AAAA,SAASA,WAAT,QAA4B,cAA5B;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,SAAO,MAAOC,QAAP,IAAoB;AACvB,UAAMC,SAAS,GAAG,YAAY;AAC1B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qEAAD,CAA5B;;AACA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACH;;AACD,YAAMC,IAAI,GAAGJ,QAAQ,CAACK,IAAT,EAAb;AACA,aAAOD,IAAP;AACH,KAPD;;AASA,QAAI;AACA,YAAME,QAAQ,GAAG,MAAMP,SAAS,EAAhC;AACAD,MAAAA,QAAQ,CAACH,WAAW,CAACY,WAAZ,CAAwB;AAC7BC,QAAAA;AAD6B,OAAxB,CAAD,CAAR;AAGH,KALD,CAKE,OAAOC,KAAP,EAAc;AACZX,MAAAA,QAAQ,CACJF,SAAS,CAACc,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,OADiB;AAEzBC,QAAAA,KAAK,EAAE,QAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADI,CAAR;AAOH;AACJ,GAxBD;AAyBH,CA1BM;AA4BP,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AAClC,SAAO,MAAOjB,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CACNF,SAAS,CAACc,gBAAV,CAA2B;AACzBC,MAAAA,MAAM,EAAE,SADiB;AAEzBC,MAAAA,KAAK,EAAE,YAFkB;AAGzBC,MAAAA,OAAO,EAAE;AAHgB,KAA3B,CADM,CAAR;;AAQA,UAAMG,WAAW,GAAG,YAAY;AAC9B,YAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAC1B,qEAD0B,EAE1B;AACEgB,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AAFR,OAF0B,CAA5B;;AAQA,UAAI,CAACf,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD;AACF,KAZD;;AAcA,QAAI;AACF,YAAMa,WAAW,EAAjB;AACAlB,MAAAA,QAAQ,CACNF,SAAS,CAACc,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,SADiB;AAEzBC,QAAAA,KAAK,EAAE,SAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD,KATD,CASE,OAAOJ,KAAP,EAAc;AACdX,MAAAA,QAAQ,CACNF,SAAS,CAACc,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,OADiB;AAEzBC,QAAAA,KAAK,EAAE,QAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD;AACF,GAzCD;AA0CD,CA3CI","sourcesContent":["import { cartActions } from \"./cart-slice\";\nimport { uiActions } from \"./ui-slice\";\n\nexport const fetchCartData = () => {\n    return async (dispatch) => {\n        const fetchData = async () => {\n            const response = await fetch('https://react-http-demo-43d6f-default-rtdb.firebaseio.com/cart.json');\n            if (!response.ok) {\n                throw new Error(\"Could not fetch cart data\");\n            }\n            const data = response.json();\n            return data;\n        }\n\n        try {\n            const cartData = await fetchData();\n            dispatch(cartActions.replaceCart({\n                ite\n            }));\n        } catch (error) {\n            dispatch(\n                uiActions.showNotification({\n                  status: \"error\",\n                  title: \"Error!\",\n                  message: \"Fetching Cart Data Failed!\",\n                })\n              );\n        }\n    }\n}\n\nexport const sendCartData = (cart) => {\n    return async (dispatch) => {\n      dispatch(\n        uiActions.showNotification({\n          status: \"pending\",\n          title: \"Sending...\",\n          message: \"Sending Cart Data!\",\n        })\n      );\n  \n      const sendRequest = async () => {\n        const response = await fetch(\n          \"https://react-http-demo-43d6f-default-rtdb.firebaseio.com/cart.json\",\n          {\n            method: \"PUT\",\n            body: JSON.stringify(cart),\n          }\n        );\n  \n        if (!response.ok) {\n          throw new Error(\"Sending Cart Data Failed.\");\n        }\n      };\n  \n      try {\n        await sendRequest();\n        dispatch(\n          uiActions.showNotification({\n            status: \"success\",\n            title: \"Success\",\n            message: \"Sent Cart Data Successfully!\",\n          })\n        );\n      } catch (error) {\n        dispatch(\n          uiActions.showNotification({\n            status: \"error\",\n            title: \"Error!\",\n            message: \"Sending Cart Data Failed!\",\n          })\n        );\n      }\n    };\n  };"]},"metadata":{},"sourceType":"module"}