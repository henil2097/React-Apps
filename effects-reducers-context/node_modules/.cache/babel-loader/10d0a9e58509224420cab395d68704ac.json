{"ast":null,"code":"var _jsxFileName = \"/Users/pateh1/Desktop/ReactApps/effects-reducers-context/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n\n    if (storedUserLoggedInInformation) {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = () => {\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n\n  /*#__PURE__*/\n  _jsxDEV(AuthContext.Provider, {\n    value: {},\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/pateh1/Desktop/ReactApps/effects-reducers-context/src/store/auth-context.js"],"names":["React","useEffect","AuthContext","createContext","isLoggedIn","onLogout","onLogin","AuthContextProvider","props","setIsLoggedIn","useState","storedUserLoggedInInformation","localStorage","getItem","loginHandler","setItem","logoutHandler","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,UAAU,EAAE,KAD0B;AAEtCC,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAFoB;AAGtCC,EAAAA,OAAO,EAAE,MAAM,CAAE;AAHqB,CAApB,CAApB;AAMA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAM,CAACJ,UAAD,EAAaK,aAAb,IAA8BC,QAAQ,CAAC,KAAD,CAA5C;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,6BAA6B,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAtC;;AACA,QAAIF,6BAAJ,EAAmC;AACjCF,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GALM,EAKJ,EALI,CAAT;;AAOA,QAAMK,YAAY,GAAG,MAAM;AACvBF,IAAAA,YAAY,CAACG,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACAN,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAHD;;AAIA,QAAMO,aAAa,GAAG,MAAM;AACxBJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,YAAxB;AACAR,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAHD;;AAKA;AAAA,UAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,EAA7B;AAAA,cACKD,KAAK,CAACU;AADX;AAAA;AAAA;AAAA;AAAA;AAGH,CAtBM;;GAAMX,mB;;KAAAA,mB;AAwBb,eAAeL,WAAf","sourcesContent":["import React, { useEffect } from \"react\";\n\nconst AuthContext = React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: () => {}\n});\n\nexport const AuthContextProvider = (props) => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n        const storedUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n        if (storedUserLoggedInInformation) {\n          setIsLoggedIn(true);\n        }\n      }, []);\n\n    const loginHandler = () => {\n        localStorage.setItem(\"isLoggedIn\", \"1\");\n        setIsLoggedIn(true);\n    }\n    const logoutHandler = () => {\n        localStorage.removeItem(\"isLoggedIn\");\n        setIsLoggedIn(false);\n    }\n\n    <AuthContext.Provider value={{}}>\n        {props.children}\n    </AuthContext.Provider>\n}\n\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}