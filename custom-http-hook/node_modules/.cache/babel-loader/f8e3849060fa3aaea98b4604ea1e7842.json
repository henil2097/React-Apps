{"ast":null,"code":"var _jsxFileName = \"/Users/pateh1/Desktop/ReactApps/custom-http-hook/src/components/NewTask/NewTask.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useHttp from '../../hooks/useHttp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskRequest\n  } = useHttp();\n\n  const createTask = taskData => {\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n\n    const createdTask = {\n      id: generatedId,\n      text: taskText\n    };\n    props.onAddTask(createdTask);\n  };\n\n  const enterTaskHandler = async taskText => {\n    sendTaskRequest({\n      url: 'https://react-http-demo-43d6f-default-rtdb.firebaseio.com/tasks.json',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: {\n        text: taskText\n      }\n    }, createTask);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"CHTm8glBLLkanx8QMoKTUc4sOuk=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["/Users/pateh1/Desktop/ReactApps/custom-http-hook/src/components/NewTask/NewTask.js"],"names":["useState","Section","TaskForm","useHttp","NewTask","props","isLoading","error","sendRequest","sendTaskRequest","createTask","taskData","generatedId","name","createdTask","id","text","taskText","onAddTask","enterTaskHandler","url","method","headers","body"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAAW,EAAEC;AAAjC,MAAoDN,OAAO,EAAjE;;AAEA,QAAMO,UAAU,GAAIC,QAAD,IAAc;AAC/B,UAAMC,WAAW,GAAGD,QAAQ,CAACE,IAA7B,CAD+B,CACI;;AACnC,UAAMC,WAAW,GAAG;AAAEC,MAAAA,EAAE,EAAEH,WAAN;AAAmBI,MAAAA,IAAI,EAAEC;AAAzB,KAApB;AAEAZ,IAAAA,KAAK,CAACa,SAAN,CAAgBJ,WAAhB;AACD,GALD;;AAOA,QAAMK,gBAAgB,GAAG,MAAOF,QAAP,IAAoB;AAC3CR,IAAAA,eAAe,CAAC;AACdW,MAAAA,GAAG,EAAE,sEADS;AAEdC,MAAAA,MAAM,EAAE,MAFM;AAGdC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHK;AAMdC,MAAAA,IAAI,EAAE;AAAEP,QAAAA,IAAI,EAAEC;AAAR;AANQ,KAAD,EAOZP,UAPY,CAAf;AAQD,GATD;;AAWA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAES,gBAAvB;AAAyC,MAAA,OAAO,EAAEb;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA3BD;;GAAMH,O;UACsDD,O;;;KADtDC,O;AA6BN,eAAeA,OAAf","sourcesContent":["import { useState } from 'react';\n\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useHttp from '../../hooks/useHttp';\n\nconst NewTask = (props) => {\n  const { isLoading, error, sendRequest: sendTaskRequest} = useHttp();\n  \n  const createTask = (taskData) => {\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = { id: generatedId, text: taskText };\n\n    props.onAddTask(createdTask);\n  }\n\n  const enterTaskHandler = async (taskText) => {\n    sendTaskRequest({\n      url: 'https://react-http-demo-43d6f-default-rtdb.firebaseio.com/tasks.json',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: { text: taskText }\n    }, createTask);\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}